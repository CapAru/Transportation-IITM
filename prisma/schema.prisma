// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PendingUser {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  college   String
  createdAt DateTime @default(now())
}

model User {
  id           String    @id @default(cuid())
  name         String
  email        String    @unique
  college      String
  password     String
  createdAt    DateTime  @default(now())
  validity     DateTime?
  accessToken  String
  refreshToken String
  isAdmin      Boolean   @default(false)
  Session      Session[]
}

model Session {
  id           String   @id @default(cuid())
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  accessToken  String   @unique
  refreshToken String   @unique
  createdAt    DateTime @default(now())
  expiresAt    DateTime
}

model PastUser {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  college   String
  createdOn DateTime
  expiredOn DateTime
}

model SampleData {
  id        Int     @id @default(autoincrement())
  LogTime   DateTime
  Pkt_Hdr   String
  RSU_ID    Int
  OBU_ID    Int
  PktType   Int
  PktLen    Int
  TimeIST   String @map("Time(IST)")
  GPSValid  String
  Latitude  Float
  Longitude Float
  DateIST   String @map("Date(IST)")
  Accel_X   Float
  Accel_Y   Float
  Accel_Z   Float
  Gyro_X    Float
  Gyro_Y    Float
  Gyro_Z    Float
}
